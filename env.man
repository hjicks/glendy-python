.TH GLENDY 3
.SH NAME
arrange_blocks, glenda_around, reset_state,
get_glenda_move, check_lose \- glendy environment
.SH SYNOPSIS
.EX
.sp 0.3v
import env

class GlendyEnv():

	start = (5, 5)
	blocks = []
	exits = base_exits.copy()
	actions = ['ne', 'e', 'se', 'nw', 'w', 'sw']
	result = ""
.EE

.SH DESCRIPTION
This library deals with logic of
.I glendy
and provides an easy to use interface to implment clients.

.I arrange_blocks
sets up the map with glenda always on middle
and amount of walls based on 
.I difficulity
variable,
.TP 10
.B 'Easy'
10 ≤ x ≤ 15
.TP 10
.B 'Medium'
5 ≤ x ≤ 10
.TP 10
.B 'Hard'
1 ≤ x ≤ 5
.TP 10
.B 'Impossible'
x = 0
.PP
where 
.B x
is number of walls in map.
.PP
.I reset_state
function resets the map and game
to it's inital state, useful for restarting games
.PP
.I glenda_around
returns values around glenda's position in a list.
.PP
.I get_glenda_move
returns glenda's movement on a given position.
currently, glenda's movment is defined by BFS algorithm.
.PP
.I check_lose
checks if glenda is in the map or not, indicating game state.
